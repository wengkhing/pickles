service: ${self:custom.config.fullServiceName}
frameworkVersion: '3'

plugins:
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  config: ${file(./config/app.config.js)}
  logRetentionInDays: 30
  prune:
    automatic: true
    number: 3
  serverless-offline:
    useChildProcesses: true
    httpPort: 3010
  webpack:
    webpackConfig: './webpack.config.js'
    includeModules:
      packagePath: 'package.json'
    packager: 'yarn'

provider:
  name: aws
  lambdaHashingVersion: 20201221
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: ${self:custom.config.region}
  environment:
    APP_ENV: ${self:provider.stage}
    EVENT_BUS:  ${self:custom.config.appName}-event-bus-${self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - events:PutEvents
      Resource:
      - 'Fn::Join':
        - ':'
        -
          - 'arn:aws:events'
          - Ref: 'AWS::Region'
          - Ref: 'AWS::AccountId'
          - 'event-bus/${self:custom.config.appName}-event-bus-${self:provider.stage}'

functions:
  api:
    handler: 'handler.main'
    events:
      - httpApi:
          method: '*'
          path: '/'
      - httpApi:
          method: '*'
          path: '/{proxy+}'

